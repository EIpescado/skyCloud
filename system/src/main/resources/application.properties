#server.port=2003
logging.config=classpath:logback.xml

##\u542F\u7528\u65AD\u8DEF\u5668
feign.hystrix.enabled=true
#\u8BF7\u6C42\u538B\u7F29 \u4E0B\u9762\u90FD\u4E3A\u9ED8\u8BA4\u503C
feign.compression.request.mime-types=text/xml,application/xml,application/json
#\u8BF7\u6C42\u538B\u7F29\u5927\u5C0F\u4E0B\u9650
feign.compression.request.min-request-size=2048

#\u5BA2\u6237\u7AEF\u8C03\u7528\u8D85\u65F6\u65F6\u95F4 \u5168\u5C40 \u8D85\u65F6\u91CD\u8BD5\u4F9D\u7136\u5931\u8D25\u5219\u629B\u51FA\u9519\u8BEF\u4FE1\u606F
ribbon.ConnectTimeout=5000
ribbon.ReadTimeout=5000
#\u5177\u4F53\u670D\u52A1\u5355\u72EC\u914D\u7F6E
#serviceName.ribbon.ReadTimeout=500

#hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false

#\u6570\u636E\u6E90
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/dota2
spring.datasource.username=root
spring.datasource.password=root

##\u65AD\u8DEF\u5668\u7194\u65AD\u6700\u5927\u8D85\u65F6\u65F6\u95F4
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

#rabbitMQ boot \u914D\u7F6E\u65B9\u5F0F
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=yq
#spring.rabbitmq.password=123456

#MQ\u591A\u5B9E\u4F8B\u914D\u7F6E
#\u8BBE\u7F6E\u7ED1\u5B9A\u5668\u5C5E\u6027
#\u6307\u5B9A\u7ED1\u5B9A\u5668\u7C7B\u578B\u6807\u8BC6\u540D,\u5B9A\u4E49\u4E8EMETA-INF/spring.binders
spring.cloud.stream.binders.rabbitOne.type=rabbit
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.host=localhost
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.username=yq
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.password=123456

spring.cloud.stream.binders.rabbitTwo.type=rabbit
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.host=192.168.0.110
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.username=yq
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.password=123456


#spring-cloud-stream \u9075\u4ECE\u53D1\u5E03-\u8BA2\u9605\u6A21\u5F0F,\u5BF9\u5171\u4EAB\u7684topic\u8FDB\u884C\u5E7F\u64AD \u540C\u4E00\u6D88\u606F,\u591A\u6B21\u6D88\u8D39
#\u6307\u5B9A\u7EC4\u540D,\u591A\u4E2A\u6D88\u8D39\u8005\u63A5\u53D7\u6D88\u606F,\u53EA\u6709\u4E00\u4E2A\u4F1A\u771F\u6B63\u5BF9\u6D88\u606F\u8FDB\u884C\u5904\u7406
#\u4E0D\u5206\u914D\u7EC4 \u5219\u4E3A\u9ED8\u8BA4\u7EC4
#spring.cloud.stream.binders.input.group=
spring.cloud.stream.bindings.systemInput.binder=rabbitOne
spring.cloud.stream.bindings.systemInput.destination=simple_topic
spring.cloud.stream.bindings.systemInput.contentType=application/json
spring.cloud.stream.bindings.systemInput.group=systemGroup
#\u6D88\u8D39\u8005\u914D\u7F6E \u4EC5\u5BF9\u8F93\u5165\u901A\u9053\u6709\u6548
#\u6D88\u8D39\u8005\u6700\u5927\u5E76\u53D1\u6570
spring.cloud.stream.bindings.systemInput.consumer.maxConcurrency=3
#\u6D88\u606F\u9884\u53D6\u6570\u91CF \u4E00\u6B21\u56DE\u8BDD\u4ECE\u4E2D\u95F4\u4EF6\u83B7\u53D6\u7684\u6D88\u606F\u6570\u91CF \u6570\u503C\u5927 \u5904\u7406\u901F\u5EA6\u5FEB,\u4F46\u4F1A\u5BFC\u81F4\u975E\u987A\u5E8F\u5904\u7406\u98CE\u9669
spring.cloud.stream.bindings.systemInput.consumer.prefetch=1

spring.cloud.stream.bindings.systemOutput.binder=rabbitOne
spring.cloud.stream.bindings.systemOutput.destination=system_topic
spring.cloud.stream.bindings.systemOutput.contentType=application/json
spring.cloud.stream.bindings.systemOutput.group=systemGroup
#\u751F\u6210\u8005\u914D\u7F6E \u4EC5\u5BF9\u8F93\u51FA\u901A\u9053\u6709\u6548
#\u662F\u5426\u542F\u7528\u6D88\u606F\u538B\u7F29
spring.cloud.stream.bindings.systemOutput.producer.compress=1


#\u6D88\u606F\u5206\u533A \u5355\u4E00\u5B9E\u4F8B\u6D88\u8D39\u5916,\u8FD8\u5E0C\u671B\u5177\u5907\u76F8\u540C\u7279\u5F81\u7684\u6D88\u606F\u90FD\u80FD\u591F\u88AB\u540C\u4E00\u5B9E\u4F8B\u6D88\u8D39
#\u5F00\u542F\u6D88\u8D39\u8005\u5206\u533A\u529F\u80FD
spring.cloud.stream.bindings.systemInput.consumer.partitioned=true
#\u5F53\u524D\u6D88\u8D39\u8005\u603B\u5B9E\u4F8B\u6570\u91CF
spring.cloud.stream.instance-count=4
#\u5F53\u524D\u5B9E\u4F8B\u7D22\u5F15\u53F7 \u4ECE0\u5F00\u59CB < instance-count \u8C8C\u4F3C\u9ED8\u8BA4\u88AB\u7D22\u5F15\u4E3A1\u7684\u6D88\u8D39,\u5F85\u9A8C\u8BC1
spring.cloud.stream.instance-index=1

#sleuth \u62BD\u6837\u6536\u96C6\u7B56\u7565\u901A\u8FC7 sampler\u63A5\u53E3
#\u9ED8\u8BA4\u4F7F\u7528\u767E\u5206\u6BD4\u62BD\u6837\u7B56\u7565PercentageBasedSampler \u4EE5\u767E\u5206\u6BD4\u65B9\u5F0F\u914D\u7F6E,\u6536\u96C6\u8DDF\u8E2A\u4FE1\u606F \u9ED8\u8BA410%
#\u5F00\u53D1\u8C03\u8BD5\u9636\u6BB5 \u5EFA\u8BAE\u4F7F\u7528AlwaysSampler 100%
spring.sleuth.sampler.percentage=1

#\u914D\u7F6Ezipkin-server\u5730\u5740
spring.zipkin.base-url=http://localhost:2899/