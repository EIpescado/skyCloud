#\u65E5\u5FD7\u6587\u4EF6\u5730\u5740  \u65E5\u5FD7\u7EA7\u522B
skyCloud.log.path=D:/skyCloudLogs
skyCloud.log.level=DEBUG

#redis\u914D\u7F6E
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=127.0.0.1
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=123456
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6379
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=1000
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=10
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=0

#token\u52A0\u5BC6\u5BC6\u94A5
token.secret=UnRAbmV3dG9rZW4xMjM
#\u8FC7\u671F\u65F6\u95F4\u4E00\u5929
token.expire.time=86400000

#\u6307\u5B9A\u670D\u52A1\u6CE8\u518C\u4E2D\u5FC3
eureka.client.serviceUrl.defaultZone=http://eureka1:2000/eureka/,http://eureka2:2002/eureka/

#MQ\u591A\u5B9E\u4F8B\u914D\u7F6E rabbitOne,rabbitTwo
#\u8BBE\u7F6E\u7ED1\u5B9A\u5668\u5C5E\u6027
#\u6307\u5B9A\u7ED1\u5B9A\u5668\u7C7B\u578B\u6807\u8BC6\u540D,\u5B9A\u4E49\u4E8EMETA-INF/spring.binders
spring.cloud.stream.binders.rabbitOne.type=rabbit
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.host=localhost
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.username=yq
spring.cloud.stream.binders.rabbitOne.environment.spring.rabbitmq.password=123456

spring.cloud.stream.binders.rabbitTwo.type=rabbit
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.host=192.168.0.110
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.username=yq
spring.cloud.stream.binders.rabbitTwo.environment.spring.rabbitmq.password=123456

#\u8BBE\u7F6E\u9ED8\u8BA4binder
spring.cloud.stream.default-binder=rabbitOne

#\u914D\u7F6Ezipkin-server\u5730\u5740
spring.zipkin.base-url=http://localhost:2899/
#sleuth \u62BD\u6837\u6536\u96C6\u7B56\u7565\u901A\u8FC7 sampler\u63A5\u53E3
#\u9ED8\u8BA4\u4F7F\u7528\u767E\u5206\u6BD4\u62BD\u6837\u7B56\u7565PercentageBasedSampler \u4EE5\u767E\u5206\u6BD4\u65B9\u5F0F\u914D\u7F6E,\u6536\u96C6\u8DDF\u8E2A\u4FE1\u606F \u9ED8\u8BA410%
#\u5F00\u53D1\u8C03\u8BD5\u9636\u6BB5 \u5EFA\u8BAE\u4F7F\u7528AlwaysSampler 100%
spring.sleuth.sampler.percentage=1

#\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u914D\u7F6E
#\u6C60\u542F\u52A8\u65F6\u521B\u5EFA\u7684\u8FDE\u63A5\u6570\u91CF
spring.datasource.initialSize =10
#\u5728\u4E0D\u65B0\u5EFA\u8FDE\u63A5\u7684\u6761\u4EF6\u4E0B,\u6C60\u4E2D\u4FDD\u6301\u7A7A\u95F2\u7684\u6700\u5C11\u8FDE\u63A5\u6570
spring.datasource.minIdle = 5
#\u6C60\u91CC\u4E0D\u4F1A\u88AB\u91CA\u653E\u7684\u6700\u591A\u7A7A\u95F2\u8FDE\u63A5\u6570\u91CF,\u8BBE\u7F6E\u4E3A0\u65F6\u8868\u793A\u65E0\u9650\u5236
spring.datasource.maxIdle = 20
#\u540C\u4E00\u65F6\u95F4\u53EF\u4EE5\u4ECE\u6C60\u5206\u914D\u7684\u6700\u591A\u8FDE\u63A5\u6570\u91CF,\u8BBE\u7F6E\u4E3A0\u65F6\u8868\u793A\u65E0\u9650\u5236
spring.datasource.maxActive = 30
#\u5728\u629B\u51FA\u5F02\u5E38\u4E4B\u524D,\u6C60\u7B49\u5F85\u8FDE\u63A5\u88AB\u56DE\u6536\u7684\u6700\u957F\u65F6\u95F4(\u5F53\u6CA1\u6709\u53EF\u7528\u8FDE\u63A5\u65F6),\u8BBE\u7F6E\u4E3A-1\u8868\u793A\u65E0\u9650\u7B49\u5F85
spring.datasource.maxWait =30000
#\u8FDE\u63A5\u5728\u6C60\u4E2D\u4FDD\u6301\u7A7A\u95F2\u800C\u4E0D\u88AB\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B(\u5982\u679C\u6709)\u56DE\u6536\u7684\u6700\u5C0F\u65F6\u95F4\u503C\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=1800000
#\u5728\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B\u8FD0\u884C\u671F\u95F4\u4F11\u7720\u7684\u65F6\u95F4\u503C,\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D.\u5982\u679C\u8BBE\u7F6E\u4E3A\u975E\u6B63\u6570,\u5219\u4E0D\u8FD0\u884C\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B
spring.datasource.timeBetweenEvictionRunsMillis=1800000
#\u5728\u6BCF\u6B21\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B(\u5982\u679C\u6709)\u8FD0\u884C\u65F6\u68C0\u67E5\u7684\u8FDE\u63A5\u6570\u91CF
spring.datasource.numTestsPerEvictionRun=30
#\u8D85\u8FC7\u65F6\u95F4\u9650\u5236,\u56DE\u6536\u6CA1\u6709\u7528(\u5E9F\u5F03)\u7684\u8FDE\u63A5(\u9ED8\u8BA4\u4E3A 300\u79D2,\u8C03\u6574\u4E3A180)
spring.datasource.removeAbandonedTimeout=180
#\u8D85\u8FC7removeAbandonedTimeout\u65F6\u95F4\u540E,\u662F\u5426\u8FDB \u884C\u6CA1\u7528\u8FDE\u63A5(\u5E9F\u5F03)\u7684\u56DE\u6536(\u9ED8\u8BA4\u4E3Afalse\uFF0C\u8C03\u6574\u4E3Atrue)
spring.datasource.removeAbandoned=true
#\u662F\u5426\u5728\u4ECE\u6C60\u4E2D\u53D6\u51FA\u8FDE\u63A5\u524D\u8FDB\u884C\u68C0\u9A8C
spring.datasource.testOnBorrow=false
#\u8FDE\u63A5\u662F\u5426\u88AB\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668(\u5982\u679C\u6709)\u8FDB\u884C\u68C0\u9A8C\u5982\u679C\u68C0\u6D4B\u5931\u8D25,\u5219\u8FDE\u63A5\u5C06\u88AB\u4ECE\u6C60\u4E2D\u53BB\u9664
spring.datasource.testWhileIdle=true
#\u662F\u5426\u5728\u5F52\u8FD8\u5230\u6C60\u4E2D\u524D\u8FDB\u884C\u68C0\u9A8C
spring.datasource.testOnReturn=false
#\u5728\u5C07\u9023\u63A5\u8FD4\u56DE\u7D66\u8ABF\u7528\u8005\u4E4B\u524D,\u7528\u6B64\u9A57\u8B49\u5F9E\u9023\u63A5\u6C60\u53D6\u51FA\u7684\u9023\u63A5\u662F\u5426\u70BA\u53EF\u7528  mysql:select 1  ; oracle:select 1 from dual
spring.datasource.validationQuery="select 1"

bus.test=123
